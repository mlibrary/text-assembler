<?xml version="1.0" encoding="utf-8"?>
<!--
COPYRIGHT  2015-16
MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES
ALL RIGHTS RESERVED

PERMISSION IS GRANTED TO USE, COPY, CREATE DERIVATIVE WORKS AND REDISTRIBUTE
THIS SOFTWARE AND SUCH DERIVATIVE WORKS FOR ANY PURPOSE, SO LONG AS THE NAME
OF MICHIGAN STATE UNIVERSITY IS NOT USED IN ANY ADVERTISING OR PUBLICITY
PERTAINING TO THE USE OR DISTRIBUTION OF THIS SOFTWARE WITHOUT SPECIFIC,
WRITTEN PRIOR AUTHORIZATION.  IF THE ABOVE COPYRIGHT NOTICE OR ANY OTHER
IDENTIFICATION OF MICHIGAN STATE UNIVERSITY IS INCLUDED IN ANY COPY OF ANY
PORTION OF THIS SOFTWARE, THEN THE DISCLAIMER BELOW MUST ALSO BE INCLUDED.

THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION FROM MICHIGAN STATE
UNIVERSITY AS TO ITS FITNESS FOR ANY PURPOSE, AND WITHOUT WARRANTY BY
MICHIGAN STATE UNIVERSITY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE. THE MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES SHALL
NOT BE LIABLE FOR ANY DAMAGES, INCLUDING SPECIAL, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM ARISING OUT OF OR IN
CONNECTION WITH THE USE OF THE SOFTWARE, EVEN IF IT HAS BEEN OR IS HEREAFTER
ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

Written by Megan Schanz, 2015-16
(c) Michigan State University Board of Trustees
Licensed under GNU General Public License (GPL) Version 2.
-->
<schema xmlns:security="http://security.common.services.v1.wsapi.lexisnexis.com" xmlns:tns="http://browseresultclassifications.classification.services.v1.wsapi.lexisnexis.com" xmlns:common="http://common.services.v1.wsapi.lexisnexis.com" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://browseresultclassifications.classification.services.v1.wsapi.lexisnexis.com" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema">
  <import schemaLocation="Security.xsd" namespace="http://security.common.services.v1.wsapi.lexisnexis.com" />
  <import schemaLocation="Common.xsd" namespace="http://common.services.v1.wsapi.lexisnexis.com" />
  <element name="BrowseResultClassifications" type="tns:BrowseResultClassifications">
    <annotation>
      <documentation>
				Browse the topography of a search result clustered into groups of documents
				with strong correlations to each other.
			</documentation>
    </annotation>
  </element>
  <element name="BrowseResultClassificationsResponse" type="tns:BrowseResultClassificationsResponse">
    <annotation>
      <documentation> 
				A list of classification nodes.
			</documentation>
    </annotation>
  </element>
  <complexType name="BrowseResultClassifications">
    <sequence>
      <element name="binarySecurityToken" type="security:BinarySecurityToken">
        <annotation>
          <documentation>
						Security token that must be provided on all 
						non-authentication requests.
					</documentation>
        </annotation>
      </element>
      <element name="searchId" type="string">
        <annotation>
          <documentation>
						Unique identifier that maintains all pertinent information
                        from the original search.</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="classificationId" type="string">
        <annotation>
          <documentation>
						 An indentifier for the classification node.  
					</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="orderBy" type="tns:OrderBy">
        <annotation>
          <documentation>
						Specifies the order in which returned classification nodes are to be returned.
						By default, this will be alphabetical.  This element can also specify that nodes
						be returned ordered by document count (high to low).  The Unclassified node
						will always return last in the list, regardless of document count.
					</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="listType" type="tns:ListType">
        <annotation>
          <documentation>
						Specifies the type of list to be returned.  By default listType is Hierarchy,
						and the list returned will be a slice of the classification taxonomy (a
						single level in the tree).  This element can also specify that all
						classification nodes be returned in a flat list, with no regard for
						the taxonomy hierarchy.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <simpleType name="OrderBy">
    <restriction base="string">
      <enumeration value="Name" />
      <enumeration value="DocumentCount" />
    </restriction>
  </simpleType>
  <simpleType name="ListType">
    <restriction base="string">
      <enumeration value="Hierarchy" />
      <enumeration value="Flat" />
    </restriction>
  </simpleType>
  <complexType name="BrowseResultClassificationsResponse">
    <sequence>
      <element name="classificationList" type="tns:ClassificationList">
        <annotation>
          <documentation>
					A list of classifications.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="ClassificationList">
    <sequence>
      <element minOccurs="0" maxOccurs="unbounded" name="classification" type="tns:Classification">
        <annotation>
          <documentation>
					Detailed information about a classification.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Classification">
    <sequence>
      <element name="classificationId" type="string">
        <annotation>
          <documentation>
						An identifier for the classification node.
					</documentation>
        </annotation>
      </element>
      <element name="name" type="string">
        <annotation>
          <documentation>
						The name of the classification node.
					</documentation>
        </annotation>
      </element>
      <element name="documentCount" type="integer">
        <annotation>
          <documentation>
					The number of documents corresponding to the 
					classification node.
					</documentation>
        </annotation>
      </element>
      <element name="hasChildren" type="boolean">
        <annotation>
          <documentation>
						A flag indicates if the classification node has any
						children.
					</documentation>
        </annotation>
      </element>
      <element name="unclassified" type="boolean">
        <annotation>
          <documentation>
						A flag indicates if the classification node is
						unclassified.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
</schema>