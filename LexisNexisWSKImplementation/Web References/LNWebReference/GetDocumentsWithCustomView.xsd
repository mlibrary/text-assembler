<?xml version="1.0" encoding="utf-8"?>
<!--
COPYRIGHT  2015-16
MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES
ALL RIGHTS RESERVED

PERMISSION IS GRANTED TO USE, COPY, CREATE DERIVATIVE WORKS AND REDISTRIBUTE
THIS SOFTWARE AND SUCH DERIVATIVE WORKS FOR ANY PURPOSE, SO LONG AS THE NAME
OF MICHIGAN STATE UNIVERSITY IS NOT USED IN ANY ADVERTISING OR PUBLICITY
PERTAINING TO THE USE OR DISTRIBUTION OF THIS SOFTWARE WITHOUT SPECIFIC,
WRITTEN PRIOR AUTHORIZATION.  IF THE ABOVE COPYRIGHT NOTICE OR ANY OTHER
IDENTIFICATION OF MICHIGAN STATE UNIVERSITY IS INCLUDED IN ANY COPY OF ANY
PORTION OF THIS SOFTWARE, THEN THE DISCLAIMER BELOW MUST ALSO BE INCLUDED.

THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION FROM MICHIGAN STATE
UNIVERSITY AS TO ITS FITNESS FOR ANY PURPOSE, AND WITHOUT WARRANTY BY
MICHIGAN STATE UNIVERSITY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE. THE MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES SHALL
NOT BE LIABLE FOR ANY DAMAGES, INCLUDING SPECIAL, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM ARISING OUT OF OR IN
CONNECTION WITH THE USE OF THE SOFTWARE, EVEN IF IT HAS BEEN OR IS HEREAFTER
ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

Written by Megan Schanz, 2015-16
(c) Michigan State University Board of Trustees
Licensed under GNU General Public License (GPL) Version 2.
-->
<schema xmlns:security="http://security.common.services.v1.wsapi.lexisnexis.com" xmlns:result="http://result.common.services.v1.wsapi.lexisnexis.com" xmlns:tns="http://getdocumentswithcustomview.retrieve.services.v1.wsapi.lexisnexis.com" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://getdocumentswithcustomview.retrieve.services.v1.wsapi.lexisnexis.com" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema">
  <import schemaLocation="Security.xsd" namespace="http://security.common.services.v1.wsapi.lexisnexis.com" />
  <import schemaLocation="Result.xsd" namespace="http://result.common.services.v1.wsapi.lexisnexis.com" />
  <import schemaLocation="SearchCommon.xsd" namespace="http://common.search.services.v1.wsapi.lexisnexis.com" />
  <element name="GetDocumentsWithCustomView" type="tns:GetDocumentsWithCustomView">
    <annotation>
      <documentation>
				Allows a client to retrieve documents in a custom view.
			</documentation>
    </annotation>
  </element>
  <element name="GetDocumentsWithCustomViewResponse" type="result:RetrievalResponse">
    <annotation>
      <documentation>
				Returns the documents requested by the client.
			</documentation>
    </annotation>
  </element>
  <complexType name="GetDocumentsWithCustomView">
    <sequence>
      <element name="binarySecurityToken" type="security:BinarySecurityToken">
        <annotation>
          <documentation>
						Security token that must be provided on all authenticated requests.
					</documentation>
        </annotation>
      </element>
      <element name="searchId" type="string">
        <annotation>
          <documentation>
						Identifier that refers to all pertinent information related to the original search.
					</documentation>
        </annotation>
      </element>
      <element name="retrievalOptions" type="tns:CustomViewRetrievalOptions">
        <annotation>
          <documentation>
						This structure contains details about how retrieved
						documents are to be presented.  Also includes the range of documents
						to return.  If absent, no documents will be returned.
					</documentation>
        </annotation>
      </element>
      <element minOccurs="0" maxOccurs="1" name="crosslinkFlag" type="string">
        <annotation>
          <documentation>
				Created a new element for XML Crosslink functionality. 
				To enable the cross linking functionality, the value to be passed is "Y" or "y"
			</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="CustomViewRetrievalOptions">
    <sequence>
      <element minOccurs="0" name="documentMarkup" type="result:DocumentMarkup">
        <annotation>
          <documentation>Defines the particular markup in which documents are to be retrieved.</documentation>
        </annotation>
      </element>
      <element name="segmentNameList" type="tns:SegmentNameList">
        <annotation>
          <documentation>Defines the segments to be included in the custom view.</documentation>
        </annotation>
      </element>
      <element name="documentRange" type="result:Range">
        <annotation>
          <documentation>Defines the range of documents to be retrieved.</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="includeExtendedOutput" type="boolean">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">true</example>
          </documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="includeShepardsSignals" type="boolean">
        <annotation>
          <documentation>Allows the retrieval of Shepard's Signals.</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="SegmentNameList">
    <sequence>
      <element minOccurs="1" maxOccurs="unbounded" name="segmentName" type="string">
        <annotation>
          <documentation>
						An identifier associated with a single LexisNexis document segment.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
</schema>