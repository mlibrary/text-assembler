<?xml version="1.0" encoding="utf-8"?>
<!--
COPYRIGHT  2015-16
MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES
ALL RIGHTS RESERVED

PERMISSION IS GRANTED TO USE, COPY, CREATE DERIVATIVE WORKS AND REDISTRIBUTE
THIS SOFTWARE AND SUCH DERIVATIVE WORKS FOR ANY PURPOSE, SO LONG AS THE NAME
OF MICHIGAN STATE UNIVERSITY IS NOT USED IN ANY ADVERTISING OR PUBLICITY
PERTAINING TO THE USE OR DISTRIBUTION OF THIS SOFTWARE WITHOUT SPECIFIC,
WRITTEN PRIOR AUTHORIZATION.  IF THE ABOVE COPYRIGHT NOTICE OR ANY OTHER
IDENTIFICATION OF MICHIGAN STATE UNIVERSITY IS INCLUDED IN ANY COPY OF ANY
PORTION OF THIS SOFTWARE, THEN THE DISCLAIMER BELOW MUST ALSO BE INCLUDED.

THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION FROM MICHIGAN STATE
UNIVERSITY AS TO ITS FITNESS FOR ANY PURPOSE, AND WITHOUT WARRANTY BY
MICHIGAN STATE UNIVERSITY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE. THE MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES SHALL
NOT BE LIABLE FOR ANY DAMAGES, INCLUDING SPECIAL, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM ARISING OUT OF OR IN
CONNECTION WITH THE USE OF THE SOFTWARE, EVEN IF IT HAS BEEN OR IS HEREAFTER
ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

Written by Megan Schanz, 2015-16
(c) Michigan State University Board of Trustees
Licensed under GNU General Public License (GPL) Version 2.
-->
<schema xmlns:security="http://security.common.services.v1.wsapi.lexisnexis.com" xmlns:result="http://result.common.services.v1.wsapi.lexisnexis.com" xmlns:tns="http://getattachments.retrieve.services.v1.wsapi.lexisnexis.com" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://getattachments.retrieve.services.v1.wsapi.lexisnexis.com" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema">
  <import schemaLocation="Security.xsd" namespace="http://security.common.services.v1.wsapi.lexisnexis.com" />
  <import schemaLocation="SearchCommon.xsd" namespace="http://common.search.services.v1.wsapi.lexisnexis.com" />
  <import schemaLocation="Result.xsd" namespace="http://result.common.services.v1.wsapi.lexisnexis.com" />
  <element name="GetAttachments" type="tns:GetAttachments">
    <annotation>
      <documentation>
				Allows a client to retrieve attachments associated with documents such as images, PDFs, etc.
			</documentation>
    </annotation>
  </element>
  <element name="GetAttachmentsResponse" type="tns:GetAttachmentsResponse">
    <annotation>
      <documentation>
				Returns the attachment(s) requested by the client.
			</documentation>
    </annotation>
  </element>
  <complexType name="GetAttachments">
    <sequence>
      <element name="binarySecurityToken" type="security:BinarySecurityToken">
        <annotation>
          <documentation>
						Security token that must be provided on all authenticated requests.
					</documentation>
        </annotation>
      </element>
      <element name="attachmentIdList" type="tns:AttachmentIdList" />
    </sequence>
  </complexType>
  <complexType name="GetAttachmentsResponse">
    <sequence>
      <element minOccurs="0" name="attachmentContainerList" type="tns:AttachmentContainerList" />
    </sequence>
  </complexType>
  <complexType name="AttachmentIdList">
    <sequence>
      <element maxOccurs="unbounded" name="attachmentId" type="string">
        <annotation>
          <documentation>
						Encapsulates metadata about a single attachment.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="AttachmentContainerList">
    <sequence>
      <element minOccurs="0" maxOccurs="unbounded" name="attachmentContainer" type="tns:AttachmentContainer">
        <annotation>
          <documentation>
						Encapsulates metadata for individual attachments.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="AttachmentContainer">
    <sequence>
      <element name="attachmentId" type="string">
        <annotation>
          <documentation>
						Id of the attachment returned..
					</documentation>
        </annotation>
      </element>
      <element name="mimeType" type="string">
        <annotation>
          <documentation>
						MIME type of the attachment (e.g. image/gif, application/pdf, etc.)
						If a MIME type cannot be determined, then "unknown" will be returned.
					</documentation>
        </annotation>
      </element>
      <element name="attachment" type="base64Binary">
        <annotation>
          <documentation>
						Attachment returned and base 64 encoded.
					</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
</schema>