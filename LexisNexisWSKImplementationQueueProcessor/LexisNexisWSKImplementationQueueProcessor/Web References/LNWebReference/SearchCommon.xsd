<?xml version="1.0" encoding="utf-8"?>
<!--
COPYRIGHT  2015-16
MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES
ALL RIGHTS RESERVED

PERMISSION IS GRANTED TO USE, COPY, CREATE DERIVATIVE WORKS AND REDISTRIBUTE
THIS SOFTWARE AND SUCH DERIVATIVE WORKS FOR ANY PURPOSE, SO LONG AS THE NAME
OF MICHIGAN STATE UNIVERSITY IS NOT USED IN ANY ADVERTISING OR PUBLICITY
PERTAINING TO THE USE OR DISTRIBUTION OF THIS SOFTWARE WITHOUT SPECIFIC,
WRITTEN PRIOR AUTHORIZATION.  IF THE ABOVE COPYRIGHT NOTICE OR ANY OTHER
IDENTIFICATION OF MICHIGAN STATE UNIVERSITY IS INCLUDED IN ANY COPY OF ANY
PORTION OF THIS SOFTWARE, THEN THE DISCLAIMER BELOW MUST ALSO BE INCLUDED.

THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION FROM MICHIGAN STATE
UNIVERSITY AS TO ITS FITNESS FOR ANY PURPOSE, AND WITHOUT WARRANTY BY
MICHIGAN STATE UNIVERSITY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE. THE MICHIGAN STATE UNIVERSITY BOARD OF TRUSTEES SHALL
NOT BE LIABLE FOR ANY DAMAGES, INCLUDING SPECIAL, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM ARISING OUT OF OR IN
CONNECTION WITH THE USE OF THE SOFTWARE, EVEN IF IT HAS BEEN OR IS HEREAFTER
ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

Written by Megan Schanz, 2015-16
(c) Michigan State University Board of Trustees
Licensed under GNU General Public License (GPL) Version 2.
-->
<schema xmlns:result="http://result.common.services.v1.wsapi.lexisnexis.com" xmlns:tns="http://common.search.services.v1.wsapi.lexisnexis.com" xmlns:common="http://common.services.v1.wsapi.lexisnexis.com" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://common.search.services.v1.wsapi.lexisnexis.com" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema">
  <import schemaLocation="Result.xsd" namespace="http://result.common.services.v1.wsapi.lexisnexis.com" />
  <import schemaLocation="Common.xsd" namespace="http://common.services.v1.wsapi.lexisnexis.com" />
  <complexType name="SourceInformationChoice">
    <sequence>
      <element minOccurs="0" name="sourceIdList" type="common:SourceIdList">
        <annotation>
          <documentation>
            A grouping of LexisNexis sources.  Mutually exclusive of
            the securedSourceId element.
          </documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="securedSourceId" type="string">
        <annotation>
          <documentation>
            Unique identifier for a "secured" LexisNexis source.  Mutually
            exclusive of the sourceIdList element.
          </documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <simpleType name="SearchMethod">
    <restriction base="string">
      <enumeration value="Boolean" />
      <enumeration value="MatchOnAllWords" />
      <enumeration value="MatchOnAnyWord" />
      <enumeration value="MatchOnPhrase" />
      <enumeration value="QuickSearch" />
      <enumeration value="BooleanWithContinue" />
      <enumeration value="BooleanWithNaturalLanguageContinue" />
      <enumeration value="Freestyle" />
      <enumeration value="Raw" />
      <enumeration value="BooleanWithDecompounding" />
    </restriction>
  </simpleType>
  <complexType name="DateRestriction">
    <sequence>
      <element minOccurs="0" name="startDate" type="date">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">2004-03-21</example>
  					"From" date of date restriction (inclusive).
  				</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="endDate" type="date">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">2004-04-21</example>
  					"To" date of date restriction (inclusive).
  				</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="BaseSearchOptions">
    <sequence>
      <element minOccurs="0" default="Implied" name="sortOrder" type="result:SortOrder">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">Implied</example>
             Strategy used to sort the results of the search.  Implied 
             indicates that the sort order is chosen to best fit the search 
             method employed and the type of content that is returned.
          </documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="NarrowSearchOptions">
    <complexContent mixed="false">
      <extension base="tns:BaseSearchOptions">
        <sequence>
          <element minOccurs="0" name="dateRestriction" type="tns:DateRestriction">
            <annotation>
              <documentation>Allows a user to enforce a range of allowable publication dates. These dates are inclusive, meaning that documents that were published on the startDate and endDate will be returned.</documentation>
            </annotation>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="SearchOptions">
    <complexContent mixed="false">
      <extension base="tns:NarrowSearchOptions">
        <sequence>
          <element minOccurs="0" default="Boolean" name="searchMethod" type="tns:SearchMethod">
            <annotation>
              <documentation>
                <example xmlns="http://www.w3.org/2001/XMLSchema">MatchOnAnyWord</example>
  							Type of search logic to be used on the query string.
  						</documentation>
            </annotation>
          </element>
          <element minOccurs="0" default="true" name="ignoreCommonWords" type="boolean">
            <annotation>
              <documentation>Flag to instruct the search engine whether or not to ignore "noise" words in the search request.</documentation>
            </annotation>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="BaseLegalSearchOptions">
    <sequence>
      <element minOccurs="0" default="SourceOrder" name="legalSortOrder" type="result:LegalSortOrder">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">Implied</example>
             Strategy used to sort the results of the search.  Implied 
             indicates that the sort order is chosen to best fit the search 
             method employed and the type of content that is returned.
          </documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="subSortOrder" type="result:SubSortOrder" />
    </sequence>
  </complexType>
  <complexType name="NarrowLegalSearchOptions">
    <complexContent mixed="false">
      <extension base="tns:BaseLegalSearchOptions">
        <sequence>
          <element minOccurs="0" name="dateRestriction" type="tns:DateRestriction">
            <annotation>
              <documentation>Allows a user to enforce a range of allowable publication dates. These dates are inclusive, meaning that documents that were published on the startDate and endDate will be returned.</documentation>
            </annotation>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="LegalSearchOptions">
    <complexContent mixed="false">
      <extension base="tns:NarrowLegalSearchOptions">
        <sequence>
          <element minOccurs="0" default="Boolean" name="searchMethod" type="tns:SearchMethod">
            <annotation>
              <documentation>
                <example xmlns="http://www.w3.org/2001/XMLSchema">MatchOnAnyWord</example>
  							Type of search logic to be used on the query string.
  						</documentation>
            </annotation>
          </element>
          <element minOccurs="0" default="true" name="ignoreCommonWords" type="boolean">
            <annotation>
              <documentation>Flag to instruct the search engine whether or not to ignore "noise" words in the search request.</documentation>
            </annotation>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
</schema>